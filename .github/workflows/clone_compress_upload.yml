name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read repository URL
        id: repo_url
        run: echo "REPO_URL=$(cat repo.txt)" >> $GITHUB_ENV

      - name: Clone repository
        run: git clone --recurse-submodules ${{ env.REPO_URL }} cloned_repo

      - name: Update submodules
        working-directory: cloned_repo
        run: git submodule update --remote --merge

      - name: Zip the repository
        run: |
          sudo apt-get install -y zip
          zip -r -9 repo.zip cloned_repo

      - name: Create a new release
        id: create_release
        uses: joutvhu/create-release@v1.0.1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./repo.zip
          asset_name: repo.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the release
        uses: eregon/publish-release@v1.0.6
        with:
          release_id: ${{ steps.create_release.outputs.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup old releases
        run: |
          old_releases=$(gh release list --limit 100 | tail -n +4 | awk '{print $1}')
          for release in $old_releases; do
            gh release delete $release -y
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
